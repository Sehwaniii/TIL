1. HTML에서 자바스크립트 로드하기
1-1. inline 방식
- 태그에 직접 자바스크립트를 기술하는 방식이다.
- 장점은 태그에 연관된 스크립트가 분명하게 드러난다는 점이다.
- 하지만 정보와 제어가 섞여있기 떄문에 정보로서의 가치가 떨어진다.

1-2. script
- <script> 태그를 만들어서 여기에 자바스크립트 코드를 삽입하는 방식
- html 태그와 js코드를 분리할 수 있다.

1-3. *.js 로 분류

1-4. window.onload = function(){}
- 웹브라우저의 모든 구성요소에 대한 로드가 끝났을 때 브라우저에 의해서 호출되는 함수이다.

2. Object Model
- 웹브라우저의 구성요소들은 하나하나가 객체화되어 있다.
- 자바스크립트로 이 객체를 제어해서 웹브라우저를 제어할 수 있게 된다.
- 이 객체들은 서로 계층적인 관계로 구조화되어 있다.
- BOM, DOM은 이 구조를 구성하고 있는 가장 큰 틀의 분류

2-1. window
- window객체는 DOM을 포함한 브라우저의 창을 나타낸다.
- 자바스크립트의 모든 객체, 전역 함수, 전역 변수들은 자동으로 window 객체의 프로퍼티가 된다.

2-2. DOM
- Document Object Model

2-3. BOM
- Browser Object Model
- 웹브라우저의 창이나 프레임을 추상화해서 프로그래밍적으로 제어할 수 있도록 제공하는 수단이다.
- BOM은 전역객체인 window의 프로퍼티와 메소드들을 제공하는 수단이다.

3. Location 객체
- 문서의 주소와 관련된 객체로 window 객체의 프로퍼티이다.
- 이 객체를 이용해서 윈도우의 문서 URL을 변경할 수 있고, 문서의 위치와 관련해서 다양한 정보를 얻을 수 있다.

4. window
- 브라우저의 창을 제어하는 것과 관련된 open()함수가 window 객체에 직접적으로 포함되어 있다.

5. HTML 문서 내용을 제어

6. 이벤트
- event는 어떤 사건을 의미한다. 브라우저에서의 사건이란 사용자가 클릭을 했을 때,
  스크롤을 했을 때, 필드의 내용을 바꾸었을 때와 같은 것을 의미한다.

6-1. inline

6-2. 프로퍼티 리스너
- 프로퍼티 리스너 방식은 이벤트 대상에 해당하는 객체의 프로퍼티로 이벤트를 등록하는 방식이다.
- 인라인 방식에 비해서 HTML과 Javascript를 분리할 수 있다는 점에서 선호되는 방식이다.

6-3. 이벤트 객체
- 이벤트가 실행된 맥락의 정보가 필요할 때는 이벤트 객체를 사용한다.
  이벤트 객체는 이벤트가 실행될 때 이벤트 핸들러의 인자로 전달된다.

6-4. addEventListener
