1. 입력 요소 값 가져오기
1-1. val()함수의 사용
- 입력값 설정하기 
- 파라미터를 통해 입력값을 설정한다.

    $("셀렉터").val("내용");

- 입력값 조회
- 파라미터 없이 함수를 호출하면 현재 설정되어 있는 입력값
  (value 속성의 값)을 리턴받는다.

    let value = $("셀렉터").val();

- 조회한 입력값의 존재 여부를 if문으로 검사하면 입력여부를 알 수 있다.

    if( !value ){...}

- focus() 함수의 사용
- 입력 요소에 포커스를 강제로 설정한다.

        $("셀렉터").focus();

- 입력값 검사 패턴

    let value = $("셀렉터").val();

    if( !value ){
        alert("메시지");
        $("셀렉터").focus();
        return false;
    }

1-2. 드롭다운의 입력값
- 만약 <option> 요소에 value속성이 없을 경우 태그 안의 내용을 가져오기 때문에 값이 필요 없는 항목이더라도 반드시 공백을 지정해야 한다.
- 드롭다운 역시 val()함수를 사용하여 선택한 <option>요소의 값을 가져온다.

    let value = $("#foo").val();

- 선택 위치 조회

    $("#foo > option:selected").index();

1-3. radio의 선택 항목
- 여러 개의 항목 중에서 선택된 항목을 의미하는 가상 셀렉터
  ':checked'를 사용하여 선택된 요소에 접근

- 라디오 버튼은 여러 개의 항목 중에서 단 하나만 선택할 수 있으므로 ':checked' 가상 클래스를 사용하여 접근하는 요소 역시 단일 요소가 된다.

1-4. checkbox 선택항목
- 체크 박스는 여러 개의 항목들 중에서 복수 선택이 가능한 요소
- 사용자가 선택한 항목에 대한 접근 가상 셀렉터 ':checked'를 사용

    let el = $("셀렉터:checked");

- 체크박스는 복수 선택이 가능하기 때문에 접근 요소는 배열 상태
- 가져온 요소가 유사 배열 형태 이기 떄문에 반복문으로 처리

    for( let i = 0; i<el.length; i++){
        let value = $(el[i]).val();
    }

2. $.each()함수
- HTML요소를 원소를 갖는 배열에 대한 반복 처리를 수행하는 경우 배열의 각 원소에 대한 index값을 사용하여 원소에 접근해야 한다.

    for( let i = 0; i<el.length; i++){
        let value = $(el[i]).val();
    }

- $.each() 함수는 HTML요소의 수 만큼 콜백함수를 호출하면서 배열의 인덱스와 원소를 파라미터로 전달한다.

    $.each(el, function(index, item){
        // index : 배열의 위치
        // item : 배열의 각 원소
        let value = $(item).val();
    });

3. 포커스 관련 이벤트 처리
- 요소에 포커스가 들어 갔음을 감지하는 이벤트
- focus() 는 함수로서 사용할 경우 강제로 포커스를 지정하는 기능을 갖지만,
  이벤트로서 사용할 경우 포커스가 들어갔음을 감지하는 기능

    $("셀렉터").focus(function(e){
        ...
    });

- 포커스가 빠져 나왔음을 감지하는 이벤트
- blur() 함수는 포커스가 빠져나왔음을 감지합니다.

    $("셀렉터").blur(function(e){
        ...
    });

4. 프로퍼티를 제어하는 prop() 함수
- src, width, .. > 값을 갖는 속성 : attr(key, value)
- 값을 갖지 않는 속성 > prop
- 별도의 값 없이 이름만 명시하는 속성

    $("셀렉터").prop("disabled", true);
    > HTML 태그에서 disabled 속성을 부여하면 해당 요소가 비활성화 처리가 된다.

    $("셀렉터").prop("checked", true);
    > input 태그에서 checked 속성이 부여되면 선택상태가 되므로 jQuery에서는 true값을 부여해야 체크가 된다.

    